First, install Jest and supertest (a library to make HTTP requests during testing) using the following command:
npm install --save-dev jest supertest ts-jest @types/jest @types/supertest


Now, let's create a __tests__ directory in the root of your project, and inside it, create a file named api.test.ts. This file will contain the unit tests for your API.
// __tests__/api.test.ts

import request from 'supertest';
import app from '../src/server'; // Assuming your server.ts file is in the src directory

describe('API Endpoints', () => {
  // Test for GET /api/product
  describe('GET /api/product', () => {
    it('should retrieve a list of products', async () => {
      const response = await request(app).get('/api/product');
      expect(response.status).toBe(200);
      expect(response.body).toEqual([]);
    });
  });

  // Test for POST /api/product
  describe('POST /api/product', () => {
    it('should create a new product', async () => {
      const newProduct = {
        name: 'Test Product',
        price: 19.99,
      };

      const response = await request(app)
        .post('/api/product')
        .send(newProduct);

      expect(response.status).toBe(201);
      expect(response.body).toMatchObject(newProduct);
    });

    it('should return 400 if name or price is missing', async () => {
      const invalidProduct = {
        name: 'Test Product',
      };

      const response = await request(app)
        .post('/api/product')
        .send(invalidProduct);

      expect(response.status).toBe(400);
      expect(response.body).toHaveProperty('error');
    });
  });
});



Make sure your package.json file has the following configuration:
"scripts": {
  "test": "jest"
},
"jest": {
  "preset": "ts-jest",
  "testEnvironment": "node"
}


Now, you can run your tests using the following command:
npm test
